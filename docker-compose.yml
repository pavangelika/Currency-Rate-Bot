services:
  postgres:
    image: postgres
    container_name: postgres-container
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    networks:
      - app-network

#  bot:
#    build: .
#    container_name: bot-container
#    volumes:
#      - .:/app
#      - ~/.ssh:/root/.ssh  # Пробрасываем SSH-ключи
#    depends_on:
#      - postgres
#    env_file:
#      - .env
#    environment:
#      POSTGRES_HOST: ${DB_HOST}
#      POSTGRES_DB: ${DB_NAME}
#      POSTGRES_USER: ${DB_USER}
#      POSTGRES_PASSWORD: ${DB_PASSWORD}
#      POSTGRES_PORT: 5432
#      GIT_USER_EMAIL: ${GIT_USER_EMAIL}
#      GIT_USER_NAME: ${GIT_USER_NAME}
#    restart: always
#    networks:
#      - app-network
#    command: ["python", "main.py"]
#
#volumes:
#  postgres_data:
#
#networks:
#  app-network:

#docker-compose up --build
# 1. Остановка и очистка
#docker-compose down -v --rmi all

# 2. Пересборка
#docker-compose build --no-cache

# 3. Запуск
#docker-compose up -d

# 4. Проверка
#docker-compose ps

#docker logs bot-container

